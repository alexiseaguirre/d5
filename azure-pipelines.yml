# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
# check if CI is working
trigger:
- master

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: BuildAndTest
  displayName: 'Build and Test'
  jobs:
  - job: Build
    displayName: 'Build and Test'
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
    - task: CopyFiles@2
      inputs:
        Contents: '**/*.war'
        TargetFolder: '$(build.artifactstagingdirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'warfile'
        publishLocation: 'Container'

- stage: DeployToStaging
  displayName: 'Deploy to Staging'
  jobs: 
  - job: DeployStaging
    displayName: 'Deploy to Staging App Service'
    steps:
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Suscripcion Infraestructura(7450e2a1-d9c5-4a9f-b8f7-8290df493696)'
        appType: 'webAppLinux'
        WebAppName: 'tomcatapache-appdemo-staging'
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.war'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'
    - task: CopyFiles@2
      inputs:
        Contents: '**/*.war'
        TargetFolder: '$(build.artifactstagingdirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'warfile'
        publishLocation: 'Container'
